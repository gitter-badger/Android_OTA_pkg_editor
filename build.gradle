import java.security.MessageDigest;
import java.util.zip.ZipFile;
import java.util.zip.ZipEntry;

apply plugin: 'java'

version = '1.0'

def unzip_root = 'build/unzip_ota'
def target_ota_pkg = 'signed.zip'

repositories {
    mavenCentral()
}

task doZip(type:Zip) {
    from (unzip_root)
    baseName "clear"
}

task pack(type: JavaExec, dependsOn: [doZip, ":apksigner:jar"]) {
    description "repack stuff into signed.zip and sign it"
    main = 'com.android.signapk.SignApk'
    classpath = files("apksigner/build/libs/apksigner-1.0.jar")
    maxHeapSize '2048m'
    args '-w','security/testkey.x509.pem','security/testkey.pk8','build/distributions/clear-1.0.zip',target_ota_pkg
    doLast {
        println "      Sign Done: " + target_ota_pkg
    }
}

task('unpack', type: Copy) {
    description "unpack signed.zip"
    def zipFile = file(target_ota_pkg)
    def outputDir = file(unzip_root)

    from zipTree(zipFile)
    into outputDir
}

task removeUTC() {
    doLast {
        ant.replaceregexp(file: unzip_root + "/META-INF/com/google/android/updater-script", match: "^.*ro.build.date.utc.*\$", replace: "", byline: "true")
    }
}

task signapk(type: JavaExec, dependsOn: [":apksigner:jar"]) {
    description "resign apk that is specified by -Dfile="
    main = 'com.android.signapk.SignApk'
    classpath = files("apksigner/build/libs/apksigner-1.0.jar")
    maxHeapSize '2048m'
    args 'security/platform.x509.pem','security/platform.pk8',System.getProperty("file","null"),System.getProperty("file","null") + ".signed"
    doLast {
        println "      Sign apk Done: "
    }
}

task utc() {
    doLast {
        unpack.execute()
        removeUTC.execute()
        doZip.execute()
        pack.execute()
    }
}
